// DO NOT EDIT; automatically generated by root-gen-type

package main

import (
	"fmt"
	"reflect"

	"go-hep.org/x/hep/groot/rbase"
	"go-hep.org/x/hep/groot/rbytes"
	"go-hep.org/x/hep/groot/rdict"
	"go-hep.org/x/hep/groot/rmeta"
	"go-hep.org/x/hep/groot/root"
	"go-hep.org/x/hep/groot/rtypes"
)

type Event struct {
	Beg         string              `groot:"Beg"`
	I16         int16               `groot:"I16"`
	I32         int32               `groot:"I32"`
	I64         int64               `groot:"I64"`
	U16         uint16              `groot:"U16"`
	U32         uint32              `groot:"U32"`
	U64         uint64              `groot:"U64"`
	F32         float32             `groot:"F32"`
	F64         float64             `groot:"F64"`
	D16         root.Float16        `groot:"D16"`
	D32         root.Double32       `groot:"D32"`
	Str         string              `groot:"Str"`
	P3          P3                  `groot:"P3"`
	P3Ptr       *P3                 `groot:"P3Ptr"`
	ObjStr      rbase.ObjString     `groot:"ObjStr"`
	ObjStrPtr   *rbase.ObjString    `groot:"ObjStrPtr"`
	ArrayI16    [10]int16           `groot:"ArrayI16"`
	ArrayI32    [10]int32           `groot:"ArrayI32"`
	ArrayI64    [10]int64           `groot:"ArrayI64"`
	ArrayU16    [10]uint16          `groot:"ArrayU16"`
	ArrayU32    [10]uint32          `groot:"ArrayU32"`
	ArrayU64    [10]uint64          `groot:"ArrayU64"`
	ArrayF32    [10]float32         `groot:"ArrayF32"`
	ArrayF64    [10]float64         `groot:"ArrayF64"`
	ArrayP3s    [10]P3              `groot:"ArrayP3s"`
	ArrayObjStr [10]rbase.ObjString `groot:"ArrayObjStr"`
	N           int32               `groot:"N"`
	SliceI16    []int16             `groot:"SliceI16,meta=[N]"`
	SliceI32    []int32             `groot:"SliceI32,meta=[N]"`
	SliceI64    []int64             `groot:"SliceI64,meta=[N]"`
	SliceU16    []uint16            `groot:"SliceU16,meta=[N]"`
	SliceU32    []uint32            `groot:"SliceU32,meta=[N]"`
	SliceU64    []uint64            `groot:"SliceU64,meta=[N]"`
	SliceF32    []float32           `groot:"SliceF32,meta=[N]"`
	SliceF64    []float64           `groot:"SliceF64,meta=[N]"`
	StdStr      string              `groot:"StdStr"`
	StlVecI16   []int16             `groot:"StlVecI16"`
	StlVecI32   []int32             `groot:"StlVecI32"`
	StlVecI64   []int64             `groot:"StlVecI64"`
	StlVecU16   []uint16            `groot:"StlVecU16"`
	StlVecU32   []uint32            `groot:"StlVecU32"`
	StlVecU64   []uint64            `groot:"StlVecU64"`
	StlVecF32   []float32           `groot:"StlVecF32"`
	StlVecF64   []float64           `groot:"StlVecF64"`
	StlVecStr   []string            `groot:"StlVecStr"`
	End         string              `groot:"End"`
}

func (*Event) Class() string {
	return "Event"
}

func (*Event) RVersion() int16 {
	return 1
}

// MarshalROOT implements rbytes.Marshaler
func (o *Event) MarshalROOT(w *rbytes.WBuffer) (int, error) {
	if w.Err() != nil {
		return 0, w.Err()
	}

	hdr := w.WriteHeader(o.Class(), o.RVersion())

	w.WriteString(o.Beg)
	w.WriteI16(o.I16)
	w.WriteI32(o.I32)
	w.WriteI64(o.I64)
	w.WriteU16(o.U16)
	w.WriteU32(o.U32)
	w.WriteU64(o.U64)
	w.WriteF32(o.F32)
	w.WriteF64(o.F64)
	w.WriteF32(float32(o.D16)) // FIXME(sbinet)
	w.WriteF32(float32(o.D32)) // FIXME(sbinet)
	w.WriteString(o.Str)
	w.WriteObject(&o.P3)          // obj-any
	w.WriteObjectAny(o.P3Ptr)     // obj-any-ptr
	w.WriteObject(&o.ObjStr)      // obj
	w.WriteObjectAny(o.ObjStrPtr) // obj-ptr
	w.WriteArrayI16(o.ArrayI16[:10])
	w.WriteArrayI32(o.ArrayI32[:10])
	w.WriteArrayI64(o.ArrayI64[:10])
	w.WriteArrayU16(o.ArrayU16[:10])
	w.WriteArrayU32(o.ArrayU32[:10])
	w.WriteArrayU64(o.ArrayU64[:10])
	w.WriteArrayF32(o.ArrayF32[:10])
	w.WriteArrayF64(o.ArrayF64[:10])
	for i := range o.ArrayP3s {
		w.WriteObject(&o.ArrayP3s[i]) // obj-any
	}
	for i := range o.ArrayObjStr {
		w.WriteObject(&o.ArrayObjStr[i]) // obj
	}
	w.WriteI32(int32(o.N))
	w.WriteI8(1) // is-array
	w.WriteArrayI16(o.SliceI16[:o.N])
	w.WriteI8(1) // is-array
	w.WriteArrayI32(o.SliceI32[:o.N])
	w.WriteI8(1) // is-array
	w.WriteArrayI64(o.SliceI64[:o.N])
	w.WriteI8(1) // is-array
	w.WriteArrayU16(o.SliceU16[:o.N])
	w.WriteI8(1) // is-array
	w.WriteArrayU32(o.SliceU32[:o.N])
	w.WriteI8(1) // is-array
	w.WriteArrayU64(o.SliceU64[:o.N])
	w.WriteI8(1) // is-array
	w.WriteArrayF32(o.SliceF32[:o.N])
	w.WriteI8(1) // is-array
	w.WriteArrayF64(o.SliceF64[:o.N])
	w.WriteStdString(o.StdStr)
	w.WriteStdVectorI16(o.StlVecI16)
	w.WriteStdVectorI32(o.StlVecI32)
	w.WriteStdVectorI64(o.StlVecI64)
	w.WriteStdVectorU16(o.StlVecU16)
	w.WriteStdVectorU32(o.StlVecU32)
	w.WriteStdVectorU64(o.StlVecU64)
	w.WriteStdVectorF32(o.StlVecF32)
	w.WriteStdVectorF64(o.StlVecF64)
	w.WriteStdVectorStrs(o.StlVecStr)
	w.WriteString(o.End)

	return w.SetHeader(hdr)
}

// UnmarshalROOT implements rbytes.Unmarshaler
func (o *Event) UnmarshalROOT(r *rbytes.RBuffer) error {
	if r.Err() != nil {
		return r.Err()
	}

	hdr := r.ReadHeader(o.Class())
	if hdr.Vers > o.RVersion() {
		panic(fmt.Errorf(
			"rbytes: invalid %s version=%d > %d",
			o.Class(), hdr.Vers, o.RVersion(),
		))
	}

	o.Beg = r.ReadString()
	o.I16 = r.ReadI16()
	o.I32 = r.ReadI32()
	o.I64 = r.ReadI64()
	o.U16 = r.ReadU16()
	o.U32 = r.ReadU32()
	o.U64 = r.ReadU64()
	o.F32 = r.ReadF32()
	o.F64 = r.ReadF64()
	o.D16 = root.Float16(r.ReadF32())  // FIXME(sbinet)
	o.D32 = root.Double32(r.ReadF32()) // FIXME(sbinet)
	o.Str = r.ReadString()
	r.ReadObject(&o.P3) // obj-any
	{
		o.P3Ptr = nil
		if oo := r.ReadObjectAny(); oo != nil { // obj-any-ptr
			o.P3Ptr = oo.(*P3)
		}
	}
	r.ReadObject(&o.ObjStr) // obj
	{
		o.ObjStrPtr = nil
		if oo := r.ReadObjectAny(); oo != nil { // obj-ptr
			o.ObjStrPtr = oo.(*rbase.ObjString)
		}
	}
	r.ReadArrayI16(o.ArrayI16[:])
	r.ReadArrayI32(o.ArrayI32[:])
	r.ReadArrayI64(o.ArrayI64[:])
	r.ReadArrayU16(o.ArrayU16[:])
	r.ReadArrayU32(o.ArrayU32[:])
	r.ReadArrayU64(o.ArrayU64[:])
	r.ReadArrayF32(o.ArrayF32[:])
	r.ReadArrayF64(o.ArrayF64[:])
	for i := range o.ArrayP3s {
		r.ReadObject(&o.ArrayP3s[i]) // obj-any
	}
	for i := range o.ArrayObjStr {
		r.ReadObject(&o.ArrayObjStr[i]) // obj
	}
	o.N = r.ReadI32()
	_ = r.ReadI8() // is-array
	o.SliceI16 = rbytes.ResizeI16(nil, int(o.N))
	r.ReadArrayI16(o.SliceI16)
	_ = r.ReadI8() // is-array
	o.SliceI32 = rbytes.ResizeI32(nil, int(o.N))
	r.ReadArrayI32(o.SliceI32)
	_ = r.ReadI8() // is-array
	o.SliceI64 = rbytes.ResizeI64(nil, int(o.N))
	r.ReadArrayI64(o.SliceI64)
	_ = r.ReadI8() // is-array
	o.SliceU16 = rbytes.ResizeU16(nil, int(o.N))
	r.ReadArrayU16(o.SliceU16)
	_ = r.ReadI8() // is-array
	o.SliceU32 = rbytes.ResizeU32(nil, int(o.N))
	r.ReadArrayU32(o.SliceU32)
	_ = r.ReadI8() // is-array
	o.SliceU64 = rbytes.ResizeU64(nil, int(o.N))
	r.ReadArrayU64(o.SliceU64)
	_ = r.ReadI8() // is-array
	o.SliceF32 = rbytes.ResizeF32(nil, int(o.N))
	r.ReadArrayF32(o.SliceF32)
	_ = r.ReadI8() // is-array
	o.SliceF64 = rbytes.ResizeF64(nil, int(o.N))
	r.ReadArrayF64(o.SliceF64)
	o.StdStr = r.ReadStdString()
	r.ReadStdVectorI16(&o.StlVecI16)
	r.ReadStdVectorI32(&o.StlVecI32)
	r.ReadStdVectorI64(&o.StlVecI64)
	r.ReadStdVectorU16(&o.StlVecU16)
	r.ReadStdVectorU32(&o.StlVecU32)
	r.ReadStdVectorU64(&o.StlVecU64)
	r.ReadStdVectorF32(&o.StlVecF32)
	r.ReadStdVectorF64(&o.StlVecF64)
	r.ReadStdVectorStrs(&o.StlVecStr)
	o.End = r.ReadString()

	r.CheckHeader(hdr)
	return r.Err()
}

func init() {
	f := func() reflect.Value {
		var o Event
		return reflect.ValueOf(&o)
	}
	rtypes.Factory.Add("Event", f)
}

func init() {
	// Streamer for Event.
	rdict.StreamerInfos.Add(rdict.NewCxxStreamerInfo("Event", 1, 0xf0ca53bd, []rbytes.StreamerElement{
		&rdict.StreamerString{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("Beg", ""),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("I16", ""),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("I32", ""),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("I64", ""),
			Type:   rmeta.Long,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "long",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("U16", ""),
			Type:   rmeta.UShort,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("U32", ""),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("U64", ""),
			Type:   rmeta.ULong,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned long",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("F32", ""),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("F64", ""),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("D16", ""),
			Type:   rmeta.Float16,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Float16_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("D32", ""),
			Type:   rmeta.Double32,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Double32_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerString{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("Str", ""),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerObjectAny{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("P3", ""),
			Type:   rmeta.Any,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "P3",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerObjectAnyPointer{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("P3Ptr", ""),
			Type:   rmeta.AnyP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "P3*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerObject{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ObjStr", ""),
			Type:   rmeta.Object,
			Size:   40,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerObjectPointer{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ObjStrPtr", ""),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjString*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayI16", ""),
			Type:   rmeta.Enum(22),
			Size:   20,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayI32", ""),
			Type:   rmeta.Enum(23),
			Size:   40,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayI64", ""),
			Type:   rmeta.Enum(24),
			Size:   80,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "long",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayU16", ""),
			Type:   rmeta.Enum(32),
			Size:   20,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayU32", ""),
			Type:   rmeta.Enum(33),
			Size:   40,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayU64", ""),
			Type:   rmeta.Enum(34),
			Size:   80,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned long",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayF32", ""),
			Type:   rmeta.Enum(25),
			Size:   40,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayF64", ""),
			Type:   rmeta.Enum(28),
			Size:   80,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerObjectAny{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayP3s", ""),
			Type:   rmeta.Enum(82),
			Size:   240,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "P3",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerObject{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrayObjStr", ""),
			Type:   rmeta.Enum(81),
			Size:   400,
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("N", ""),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceI16", "[N]"),
			Type:   42,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceI32", "[N]"),
			Type:   43,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceI64", "[N]"),
			Type:   44,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "long*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceU16", "[N]"),
			Type:   52,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned short*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceU32", "[N]"),
			Type:   53,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceU64", "[N]"),
			Type:   54,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned long*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceF32", "[N]"),
			Type:   45,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		rdict.NewStreamerBasicPointer(rdict.Element{
			Name:   *rbase.NewNamed("SliceF64", "[N]"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "N", "Event"),
		&rdict.StreamerSTLstring{*rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StdStr", ""),
			Type:   rmeta.Streamer,
			Size:   32,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "string",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 365, 365)},
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecI16", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<short>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 2),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecI32", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<int>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 3),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecI64", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<long>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 4),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecU16", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<unsigned short>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 12),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecU32", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<unsigned int>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 13),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecU64", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<unsigned long>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 14),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecF32", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<float>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 5),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecF64", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		rdict.NewCxxStreamerSTL(rdict.Element{
			Name:   *rbase.NewNamed("StlVecStr", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<string>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 61),
		&rdict.StreamerString{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("End", ""),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
}

var (
	_ root.Object        = (*Event)(nil)
	_ rbytes.RVersioner  = (*Event)(nil)
	_ rbytes.Marshaler   = (*Event)(nil)
	_ rbytes.Unmarshaler = (*Event)(nil)
)

type P3 struct {
	Px int32   `groot:"Px"`
	Py float64 `groot:"Py"`
	Pz int32   `groot:"Pz"`
}

func (*P3) Class() string {
	return "P3"
}

func (*P3) RVersion() int16 {
	return 1
}

// MarshalROOT implements rbytes.Marshaler
func (o *P3) MarshalROOT(w *rbytes.WBuffer) (int, error) {
	if w.Err() != nil {
		return 0, w.Err()
	}

	hdr := w.WriteHeader(o.Class(), o.RVersion())

	w.WriteI32(o.Px)
	w.WriteF64(o.Py)
	w.WriteI32(o.Pz)

	return w.SetHeader(hdr)
}

// UnmarshalROOT implements rbytes.Unmarshaler
func (o *P3) UnmarshalROOT(r *rbytes.RBuffer) error {
	if r.Err() != nil {
		return r.Err()
	}

	hdr := r.ReadHeader(o.Class())
	if hdr.Vers > o.RVersion() {
		panic(fmt.Errorf(
			"rbytes: invalid %s version=%d > %d",
			o.Class(), hdr.Vers, o.RVersion(),
		))
	}

	o.Px = r.ReadI32()
	o.Py = r.ReadF64()
	o.Pz = r.ReadI32()

	r.CheckHeader(hdr)
	return r.Err()
}

func init() {
	f := func() reflect.Value {
		var o P3
		return reflect.ValueOf(&o)
	}
	rtypes.Factory.Add("P3", f)
}

func init() {
	// Streamer for P3.
	rdict.StreamerInfos.Add(rdict.NewCxxStreamerInfo("P3", 1, 0x64044917, []rbytes.StreamerElement{
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("Px", ""),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("Py", ""),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("Pz", ""),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
}

var (
	_ root.Object        = (*P3)(nil)
	_ rbytes.RVersioner  = (*P3)(nil)
	_ rbytes.Marshaler   = (*P3)(nil)
	_ rbytes.Unmarshaler = (*P3)(nil)
)
