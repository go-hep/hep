// DO NOT EDIT; automatically generated by root-gen-streamer

package rdatatest

import (
	"go-hep.org/x/hep/groot/rbase"
	"go-hep.org/x/hep/groot/rbytes"
	"go-hep.org/x/hep/groot/rdict"
	"go-hep.org/x/hep/groot/rmeta"
)

func init() {
	// Streamer for Event.
	rdict.StreamerInfos.Add(rdict.NewStreamerInfo("go-hep.org/x/hep/groot/internal/rdatatest.Event", int(((*Event)(nil)).RVersion()), []rbytes.StreamerElement{
		&rdict.StreamerString{rdict.Element{
			Name:   *rbase.NewNamed("Name", ""),
			Type:   rmeta.TString,
			Size:   24,
			EName:  "TString",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("u8", ""),
			Type:   rmeta.Uint8,
			Size:   1,
			EName:  "unsigned char",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("u16", ""),
			Type:   rmeta.Uint16,
			Size:   2,
			EName:  "unsigned short",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("u32", ""),
			Type:   rmeta.Uint32,
			Size:   4,
			EName:  "unsigned int",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("u64", ""),
			Type:   rmeta.Uint64,
			Size:   8,
			EName:  "unsigned long",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("i8", ""),
			Type:   rmeta.Int8,
			Size:   1,
			EName:  "char",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("i16", ""),
			Type:   rmeta.Int16,
			Size:   2,
			EName:  "short",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("i32", ""),
			Type:   rmeta.Int32,
			Size:   4,
			EName:  "int",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("i64", ""),
			Type:   rmeta.Int64,
			Size:   8,
			EName:  "long",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("f32", ""),
			Type:   rmeta.Float32,
			Size:   4,
			EName:  "float",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("f64", ""),
			Type:   rmeta.Float64,
			Size:   8,
			EName:  "double",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("b", ""),
			Type:   rmeta.Bool,
			Size:   1,
			EName:  "bool",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("bb", ""),
			Type:   rmeta.Uint8,
			Size:   1,
			EName:  "unsigned char",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		rdict.NewStreamerSTL("u8s", rmeta.STLvector, rmeta.UChar),
		rdict.NewStreamerSTL("u16s", rmeta.STLvector, rmeta.UShort),
		rdict.NewStreamerSTL("u32s", rmeta.STLvector, rmeta.UInt),
		rdict.NewStreamerSTL("u64s", rmeta.STLvector, rmeta.ULong),
		rdict.NewStreamerSTL("i8s", rmeta.STLvector, rmeta.Char),
		rdict.NewStreamerSTL("i16s", rmeta.STLvector, rmeta.Short),
		rdict.NewStreamerSTL("i32s", rmeta.STLvector, rmeta.Int),
		rdict.NewStreamerSTL("i64s", rmeta.STLvector, rmeta.Long),
		rdict.NewStreamerSTL("f32s", rmeta.STLvector, rmeta.Float),
		rdict.NewStreamerSTL("f64s", rmeta.STLvector, rmeta.Double),
		rdict.NewStreamerSTL("bs", rmeta.STLvector, rmeta.Bool),
		rdict.NewStreamerSTL("bbs", rmeta.STLvector, rmeta.UChar),
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arru8s", ""),
			Type:   rmeta.Uint8 + rmeta.OffsetL,
			Size:   10,
			EName:  "unsigned char",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arru16s", ""),
			Type:   rmeta.Uint16 + rmeta.OffsetL,
			Size:   20,
			EName:  "unsigned short",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arru32s", ""),
			Type:   rmeta.Uint32 + rmeta.OffsetL,
			Size:   40,
			EName:  "unsigned int",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arru64s", ""),
			Type:   rmeta.Uint64 + rmeta.OffsetL,
			Size:   80,
			EName:  "unsigned long",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arri8s", ""),
			Type:   rmeta.Int8 + rmeta.OffsetL,
			Size:   10,
			EName:  "char",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arri16s", ""),
			Type:   rmeta.Int16 + rmeta.OffsetL,
			Size:   20,
			EName:  "short",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arri32s", ""),
			Type:   rmeta.Int32 + rmeta.OffsetL,
			Size:   40,
			EName:  "int",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arri64s", ""),
			Type:   rmeta.Int64 + rmeta.OffsetL,
			Size:   80,
			EName:  "long",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arrf32s", ""),
			Type:   rmeta.Float32 + rmeta.OffsetL,
			Size:   40,
			EName:  "float",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arrf64s", ""),
			Type:   rmeta.Float64 + rmeta.OffsetL,
			Size:   80,
			EName:  "double",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arrbs", ""),
			Type:   rmeta.Bool + rmeta.OffsetL,
			Size:   10,
			EName:  "bool",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("arrbbs", ""),
			Type:   rmeta.Uint8 + rmeta.OffsetL,
			Size:   10,
			EName:  "unsigned char",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
		rdict.NewStreamerSTL("SliceF64", rmeta.STLvector, rmeta.Double),
		rdict.NewStreamerSTL("SliceStr", rmeta.STLvector, rmeta.TString),
		rdict.NewStreamerSTL("SliceHLV", rmeta.STLvector, rmeta.Any),
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("ArrF64", ""),
			Type:   rmeta.Float64 + rmeta.OffsetL,
			Size:   80,
			EName:  "double",
			ArrLen: 10,
			ArrDim: 1,
			MaxIdx: [5]int32{10, 0, 0, 0, 0},
		}.New()},
	}))
}

// MarshalROOT implements rbytes.Marshaler
func (o *Event) MarshalROOT(w *rbytes.WBuffer) (int, error) {
	if w.Err() != nil {
		return 0, w.Err()
	}

	hdr := w.WriteHeader(o.Class(), o.RVersion())

	w.WriteString(o.name)
	w.WriteU8(o.u8)
	w.WriteU16(o.u16)
	w.WriteU32(o.u32)
	w.WriteU64(o.u64)
	w.WriteI8(o.i8)
	w.WriteI16(o.i16)
	w.WriteI32(o.i32)
	w.WriteI64(o.i64)
	w.WriteF32(o.f32)
	w.WriteF64(o.f64)
	w.WriteBool(o.b)
	w.WriteU8(o.bb)
	w.WriteArrayU8(o.u8s)
	w.WriteArrayU16(o.u16s)
	w.WriteArrayU32(o.u32s)
	w.WriteArrayU64(o.u64s)
	w.WriteArrayI8(o.i8s)
	w.WriteArrayI16(o.i16s)
	w.WriteArrayI32(o.i32s)
	w.WriteArrayI64(o.i64s)
	w.WriteArrayF32(o.f32s)
	w.WriteArrayF64(o.f64s)
	w.WriteArrayBool(o.bs)
	w.WriteArrayU8(o.bbs)
	w.WriteArrayU8(o.arru8s[:])
	w.WriteArrayU16(o.arru16s[:])
	w.WriteArrayU32(o.arru32s[:])
	w.WriteArrayU64(o.arru64s[:])
	w.WriteArrayI8(o.arri8s[:])
	w.WriteArrayI16(o.arri16s[:])
	w.WriteArrayI32(o.arri32s[:])
	w.WriteArrayI64(o.arri64s[:])
	w.WriteArrayF32(o.arrf32s[:])
	w.WriteArrayF64(o.arrf64s[:])
	w.WriteArrayBool(o.arrbs[:])
	w.WriteArrayU8(o.arrbbs[:])
	w.WriteArrayF64(o.SliF64)
	w.WriteArrayString(o.SliStr)
	w.WriteObject(&o.SliHLV)
	w.WriteArrayF64(o.ArrF64[:])

	return w.SetHeader(hdr)
}

func init() {
	// Streamer for HLV.
	rdict.StreamerInfos.Add(rdict.NewStreamerInfo("go-hep.org/x/hep/groot/internal/rdatatest.HLV", int(((*HLV)(nil)).RVersion()), []rbytes.StreamerElement{
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("px", ""),
			Type:   rmeta.Float64,
			Size:   8,
			EName:  "double",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("py", ""),
			Type:   rmeta.Float64,
			Size:   8,
			EName:  "double",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("pz", ""),
			Type:   rmeta.Float64,
			Size:   8,
			EName:  "double",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("e", ""),
			Type:   rmeta.Float64,
			Size:   8,
			EName:  "double",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
	}))
}

// MarshalROOT implements rbytes.Marshaler
func (o *HLV) MarshalROOT(w *rbytes.WBuffer) (int, error) {
	if w.Err() != nil {
		return 0, w.Err()
	}

	hdr := w.WriteHeader(o.Class(), o.RVersion())

	w.WriteF64(o.px)
	w.WriteF64(o.py)
	w.WriteF64(o.pz)
	w.WriteF64(o.e)

	return w.SetHeader(hdr)
}

func init() {
	// Streamer for Particle.
	rdict.StreamerInfos.Add(rdict.NewStreamerInfo("go-hep.org/x/hep/groot/internal/rdatatest.Particle", int(((*Particle)(nil)).RVersion()), []rbytes.StreamerElement{
		&rdict.StreamerString{rdict.Element{
			Name:   *rbase.NewNamed("name", ""),
			Type:   rmeta.TString,
			Size:   24,
			EName:  "TString",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerBasicType{StreamerElement: rdict.Element{
			Name:   *rbase.NewNamed("pid", ""),
			Type:   rmeta.Int32,
			Size:   4,
			EName:  "int",
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
		}.New()},
		&rdict.StreamerObjectAny{StreamerElement: rdict.Element{
			Name:  *rbase.NewNamed("mom", ""),
			Type:  rmeta.Any,
			Size:  32,
			EName: rdict.GoName2Cxx("go-hep.org/x/hep/groot/internal/rdatatest.HLV"),
		}.New()},
	}))
}

// MarshalROOT implements rbytes.Marshaler
func (o *Particle) MarshalROOT(w *rbytes.WBuffer) (int, error) {
	if w.Err() != nil {
		return 0, w.Err()
	}

	hdr := w.WriteHeader(o.Class(), o.RVersion())

	w.WriteString(o.name)
	w.WriteI64(int64(o.pid))
	w.WriteObject(&o.mom)

	return w.SetHeader(hdr)
}
