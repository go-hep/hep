// Copyright Â©2020 The go-hep Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Automatically generated. DO NOT EDIT.

package rdict

import (
	"go-hep.org/x/hep/groot/rbase"
	"go-hep.org/x/hep/groot/rbytes"
	"go-hep.org/x/hep/groot/rmeta"
)

func init() {
	StreamerInfos.Add(NewCxxStreamerInfo("TAttAxis", 4, 0x5c6fff3e, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNdivisions", "Number of divisions(10000*n3 + 100*n2 + n1)"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fAxisColor", "Color of the line axis"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLabelColor", "Color of labels"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLabelFont", "Font for labels"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLabelOffset", "Offset of labels"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLabelSize", "Size of labels"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTickLength", "Length of tick marks"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTitleOffset", "Offset of axis title"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTitleSize", "Size of axis title"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTitleColor", "Color of axis title"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTitleFont", "Font for axis title"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TAttFill", 2, 0xffd92a92, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFillColor", "Fill area color"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFillStyle", "Fill area style"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TAttLine", 2, 0x94074549, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLineColor", "Line color"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLineStyle", "Line style"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLineWidth", "Line width"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TAttMarker", 2, 0x291d8bec, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMarkerColor", "Marker color"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMarkerStyle", "Marker style"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMarkerSize", "Marker size"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TNamed", 1, 0xdfb74a3c, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fName", "object identifier"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTitle", "object title"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TObject", 1, 0x901bc02d, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fUniqueID", "object unique identifier"),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBits", "bit field status word"),
			Type:   rmeta.Bits,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TObjString", 1, 0x9c8e4800, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fString", "wrapped TString"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TProcessID", 1, 0x2b7ef579, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TProcessUUID", 1, 0x9af3ae11, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TProcessID", "Process Unique Identifier in time and space"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 729740665, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fUUIDs", "Global list of TUUIDs"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fActive", "Table of active UUIDs"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TBits*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TRef", 1, 0x91757901, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TUUID", 1, 0xd24ea15b, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTimeLow", "60 bit time, lower 32 bits"),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTimeMid", "middle 16 time bits"),
			Type:   rmeta.UShort,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTimeHiAndVersion", "high 12 time bits + 4 UUID version bits"),
			Type:   rmeta.UShort,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClockSeqHiAndReserved", "high 6 clock bits + 2 bits reserved"),
			Type:   rmeta.UChar,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned char",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClockSeqLow", "low 8 clock bits"),
			Type:   rmeta.UChar,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned char",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNode", "6 node id bytes"),
			Type:   rmeta.Enum(31),
			Size:   6,
			ArrLen: 6,
			ArrDim: 1,
			MaxIdx: [5]int32{6, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned char",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TString", 2, 0x17419, []rbytes.StreamerElement{}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArray", 1, 0x7021b2, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fN", "Number of array elements"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArrayC", 1, 0xae879936, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArray", "Abstract array base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 7348658, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fArray", "[fN] Array of fN chars"),
			Type:   41,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "char*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fN", "TArray"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArrayS", 1, 0x35c9314, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArray", "Abstract array base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 7348658, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fArray", "[fN] Array of fN shorts"),
			Type:   42,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fN", "TArray"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArrayI", 1, 0xd9d571c7, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArray", "Abstract array base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 7348658, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fArray", "[fN] Array of fN 32 bit integers"),
			Type:   43,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fN", "TArray"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArrayL", 1, 0xfcfcb489, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArray", "Abstract array base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 7348658, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fArray", "[fN] Array of fN longs"),
			Type:   44,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "long*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fN", "TArray"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArrayL64", 1, 0x18e70794, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArray", "Abstract array base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 7348658, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fArray", "[fN] Array of fN long64s"),
			Type:   56,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fN", "TArray"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArrayF", 1, 0x5a0bf6f1, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArray", "Abstract array base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 7348658, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fArray", "[fN] Array of fN floats"),
			Type:   45,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fN", "TArray"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TArrayD", 1, 0x7139ef34, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArray", "Abstract array base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 7348658, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fArray", "[fN] Array of fN doubles"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fN", "TArray"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TBits", 1, 0xe763c48, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbits", "Highest bit set + 1"),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbytes", "Number of UChars in fAllBits"),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fAllBits", "[fNbytes] array of UChars"),
			Type:   51,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned char*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, "fNbytes", "TBits"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TCollection", 3, 0x57e3cb9c, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fName", "name of the collection"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSize", "number of elements in collection"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TClonesArray", 4, 0xb6c0ca63, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObjArray", "An array of objects"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1449237166, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TList", 5, 0x69c5c3bb, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TSeqCollection", "Sequenceable collection ABC"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -60015674, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 0),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("THashList", 0, 0xcc7e49c1, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TList", "Doubly linked list"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1774568379, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("THashTable", 0, 0xe11cfb96, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TCollection", "Collection abstract base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1474546588, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TMap", 3, 0xfec4a388, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TCollection", "Collection abstract base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1474546588, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTable", "Hash table used to store TPair's"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "THashTable*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TObjArray", 3, 0xa99e6552, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TSeqCollection", "Sequenceable collection ABC"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -60015674, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 0),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLowerBound", "Lower bound of the array"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLast", "Last element in array containing an object"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TRefArray", 1, 0x47f9d0dd, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TSeqCollection", "Sequenceable collection ABC"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -60015674, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 0),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fPID", "Pointer to Process Unique Identifier"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TProcessID*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fUIDs", "[fSize] To store uids of referenced objects"),
			Type:   53,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3, "fSize", "TCollection"),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLowerBound", "Lower bound of the array"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLast", "Last element in array containing an object"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TRefTable", 3, 0x8c895b85, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSize", "dummy for backward compatibility"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fParents", "array of Parent objects  (eg TTree branch) holding the referenced objects"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fOwner", "Object owning this TRefTable"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObject*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fProcessGUIDs", "UUIDs of TProcessIDs used in fParentIDs"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<string>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 61),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TSeqCollection", 0, 0xfc6c3bc6, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TCollection", "Collection abstract base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1474546588, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerInfo", 9, 0x90566883, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TVirtualStreamerInfo", "Abstract Interface describing Streamer information for one class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1154605729, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 6),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCheckSum", "Checksum of original class"),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClassVersion", "Class version identifier"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fElements", "Array of TStreamerElements"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerElement", 4, 0xdd0eb253, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fType", "element type"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSize", "sizeof element"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fArrayLength", "cumulative size of all array dims"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fArrayDim", "number of array dimensions"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaxIndex", "Maximum array index for array dimension \"dim\""),
			Type:   rmeta.Enum(23),
			Size:   20,
			ArrLen: 5,
			ArrDim: 1,
			MaxIdx: [5]int32{5, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTypeName", "Data type name of data member"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerBase", 3, 0x92715b0, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBaseVersion", "version number of the base class (used during memberwise streaming)"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerBasicType", 2, 0xf5d5ac4d, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerBasicPointer", 2, 0x318803b, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCountVersion", "version number of the class with the counter"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCountName", "name of data member holding the array count"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCountClass", "name of the class with the counter"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerLoop", 2, 0xf350b8dc, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCountVersion", "version number of the class with the counter"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCountName", "name of data member holding the array count"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCountClass", "name of the class with the counter"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerObject", 2, 0x626ac134, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerObjectPointer", 2, 0x5de72d4b, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerObjectAny", 2, 0x8f7ef50, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerObjectAnyPointer", 1, 0x3600167f, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerString", 2, 0xa0aa915e, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerSTL", 3, 0x89f908d6, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSTLtype", "type of STL vector"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCtype", "STL contained type"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerSTLstring", 2, 0x262eefa1, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerSTL", "Streamer element of type STL container"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1980167978, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TStreamerArtificial", 0, 0x5629bbc9, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TStreamerElement", "Base class for one element (data member) to be Streamed"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -586239405, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TAxis", 10, 0x5a496e70, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttAxis", "Axis attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1550843710, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbins", "Number of bins"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmin", "low edge of first bin"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmax", "upper edge of last bin"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXbins", "Bin edges array in X"),
			Type:   rmeta.Any,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TArrayD",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFirst", "first bin to display"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLast", "last bin to display"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBits2", "second bit status word"),
			Type:   rmeta.UShort,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTimeDisplay", "on/off displaying time values instead of numerics"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTimeFormat", "Date&time format, ex: 09/12/99 12:34:00"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLabels", "List of labels"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "THashList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fModLabs", "List of modified labels"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TF1", 12, 0x7223ffd8, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttLine", "Line attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1811462839, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttFill", "Fill area attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -2545006, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttMarker", "Marker attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 689802220, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmin", "Lower bounds for the range"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmax", "Upper bounds for the range"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNpar", "Number of parameters"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNdim", "Function dimension"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNpx", "Number of points used for the graphical representation"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fType", ""),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TF1::EFType",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNpfits", "Number of points used in the fit"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNDF", "Number of degrees of freedom in the fit"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fChisquare", "Function fit chisquare"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value for plotting"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value for plotting"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParErrors", "Array of errors of the fNpar parameters"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParMin", "Array of lower limits of the fNpar parameters"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParMax", "Array of upper limits of the fNpar parameters"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fSave", "Array of fNsave function values"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNormalized", "Normalization option (false by default)"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNormIntegral", "Integral of the function before being normalized"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFormula", "Pointer to TFormula in case when user define formula"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TFormula",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAnyPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fParams", "Pointer to Function parameters object (exists only for not-formula functions)"),
			Type:   rmeta.AnyP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TF1Parameters",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fComposition", "Pointer to composition (NSUM or CONV)"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TF1AbsComposition",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TF1AbsComposition", 1, 0xa71d6529, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TF1Convolution", 1, 0x34ccb053, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TF1AbsComposition", ""),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1491245783, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFunction1", "First function to be convolved"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TF1",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFunction2", "Second function to be convolved"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TF1",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParams1", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParams2", ""),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParNames", "Parameters' names"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<TString>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 61),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmin", "Minimal bound of the range of the convolution"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmax", "Maximal bound of the range of the convolution"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNofParams1", ""),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNofParams2", ""),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCstIndex", "Index of the constant parameter f the first function"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNofPoints", "Number of point for FFT array"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFlagFFT", "Choose FFT or numerical convolution"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TF1NormSum", 1, 0x75376eb3, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TF1AbsComposition", ""),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1491245783, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNOfFunctions", "Number of functions to add"),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fScale", "Fixed Scale parameter to normalize function (e.g. bin width)"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmin", "/ Minimal bound of range of NormSum"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmax", "/ Maximal bound of range of NormSum"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fFunctions", "Vector of size fNOfFunctions containing TF1 functions"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<TF1*>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 63),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fCoeffs", "Vector of size afNOfFunctions containing coefficients in front of each function"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fCstIndexes", "Vector with size of fNOfFunctions containing the index of the constant parameter/ function (the removed ones)"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<int>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 3),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParNames", "Parameter names"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<TString>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 61),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TF1Parameters", 1, 0xd703028e, []rbytes.StreamerElement{
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParameters", "parameter values"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParNames", "parameter names"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<string>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 61),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TFormula", 13, 0x3d29ef01, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fClingParameters", "parameter values"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<double>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 8),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fAllParametersSetted", "flag to control if all parameters are setted"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fParams", "|| list of  parameter names"),
			Type:   rmeta.Streamer,
			Size:   48,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "map<TString,int,TFormulaParamOrder>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, 61),
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFormula", "string representing the formula expression"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNdim", "Dimension - needed for lambda expressions"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewCxxStreamerSTL(Element{
			Name:   *rbase.NewNamed("fLinearParts", "vector of linear functions"),
			Type:   rmeta.Streamer,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "vector<TObject*>",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1, 63),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fVectorized", "whether we should use vectorized or regular variables"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TGraph", 4, 0x5f7f465, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttLine", "Line attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1811462839, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttFill", "Fill area attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -2545006, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttMarker", "Marker attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 689802220, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNpoints", "Number of points <= fMaxSize"),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fX", "[fNpoints] array of X points"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fY", "[fNpoints] array of Y points"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFunctions", "Pointer to list of functions (fits and user)"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fHistogram", "Pointer to histogram used for drawing axis"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TH1F*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value for plotting along y"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value for plotting along y"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TGraphErrors", 3, 0x2a7ce30f, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TGraph", "Graph graphics class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 100136037, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fEX", "[fNpoints] array of X errors"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fEY", "[fNpoints] array of Y errors"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TGraphAsymmErrors", 3, 0xcc46af3b, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TGraph", "Graph graphics class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 100136037, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fEXlow", "[fNpoints] array of X low errors"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fEXhigh", "[fNpoints] array of X high errors"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fEYlow", "[fNpoints] array of Y low errors"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fEYhigh", "[fNpoints] array of Y high errors"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4, "fNpoints", "TGraph"),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH1", 8, 0x1c3740c4, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttLine", "Line attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1811462839, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttFill", "Fill area attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -2545006, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttMarker", "Marker attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 689802220, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNcells", "number of bins(1D), cells (2D) +U/Overflows"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXaxis", "X axis descriptor"),
			Type:   rmeta.Object,
			Size:   216,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TAxis",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fYaxis", "Y axis descriptor"),
			Type:   rmeta.Object,
			Size:   216,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TAxis",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fZaxis", "Z axis descriptor"),
			Type:   rmeta.Object,
			Size:   216,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TAxis",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBarOffset", "(1000*offset) for bar charts or legos"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBarWidth", "(1000*width) for bar charts or legos"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fEntries", "Number of entries"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTsumw", "Total Sum of weights"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTsumw2", "Total Sum of squares of weights"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTsumwx", "Total Sum of weight*X"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTsumwx2", "Total Sum of weight*X*X"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value for plotting"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value for plotting"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNormFactor", "Normalization factor"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fContour", "Array to display contour levels"),
			Type:   rmeta.Any,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TArrayD",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSumw2", "Array of sum of squares of weights"),
			Type:   rmeta.Any,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TArrayD",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fOption", "histogram options"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFunctions", "->Pointer to list of functions (fits and user)"),
			Type:   rmeta.Objectp,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBufferSize", "fBuffer size"),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fBuffer", "[fBufferSize] entry buffer"),
			Type:   48,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8, "fBufferSize", "TH1"),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBinStatErrOpt", "option for bin statistical errors"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TH1::EBinErrorOpt",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fStatOverflows", "per object flag to use under/overflows in statistics"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TH1::EStatOverflows",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH1C", 3, 0x36f6e4ad, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH1", "1-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 473383108, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayC", "Array of chars"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1366845130, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH1D", 3, 0xf9b1569f, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH1", "1-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 473383108, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayD", "Array of doubles"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1899622196, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH1F", 3, 0xe2939644, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH1", "1-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 473383108, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayF", "Array of floats"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1510733553, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH1I", 3, 0x627564f6, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH1", "1-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 473383108, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayI", "Array of ints"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -640323129, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH1K", 2, 0xfd37ced5, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH1", "1-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 473383108, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayF", "Array of floats"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1510733553, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNIn", ""),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH1S", 3, 0x8c4d9dcb, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH1", "1-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 473383108, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayS", "Array of shorts"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 56398612, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2", 5, 0x182347f, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH1", "1-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 473383108, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 8),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fScalefactor", "Scale factor"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTsumwy", "Total Sum of weight*Y"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTsumwy2", "Total Sum of weight*Y*Y"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTsumwxy", "Total Sum of weight*X*Y"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2C", 4, 0xbd0010fe, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH2", "2-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 25310335, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayC", "Array of chars"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1366845130, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2D", 4, 0x7fba82f0, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH2", "2-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 25310335, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayD", "Array of doubles"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1899622196, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2F", 4, 0x689cc295, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH2", "2-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 25310335, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayF", "Array of floats"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1510733553, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2I", 4, 0xe87e9147, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH2", "2-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 25310335, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayI", "Array of ints"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -640323129, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2Poly", 3, 0xbc566968, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH2", "2-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 25310335, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fOverflow", "Overflow bins"),
			Type:   rmeta.Enum(28),
			Size:   72,
			ArrLen: 9,
			ArrDim: 1,
			MaxIdx: [5]int32{9, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCellX", "Number of partition cells in the x-direction of the histogram"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCellY", "Number of partition cells in the y-direction of the histogram"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNCells", "Number of partition cells: fCellX*fCellY"),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerLoop(Element{
			Name:   *rbase.NewNamed("fCells", "[fNCells] The array of TLists that store the bins that intersect with each cell. List do not own the contained objects"),
			Type:   rmeta.StreamLoop,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3, "fNCells", "TH2Poly"),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fStepX", "Dimensions of a partition cell"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fStepY", "Dimensions of a partition cell"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fIsEmpty", "[fNCells] The array that returns true if the cell at the given coordinate is empty"),
			Type:   58,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3, "fNCells", "TH2Poly"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fCompletelyInside", "[fNCells] The array that returns true if the cell at the given coordinate is completely inside a bin"),
			Type:   58,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3, "fNCells", "TH2Poly"),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFloat", "When set to kTRUE, allows the histogram to expand if a bin outside the limits is added."),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBins", "List of bins. The list owns the contained objects"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2PolyBin", 1, 0x8fb3de7c, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fChanged", "For the 3D Painter"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNumber", "Bin number of the bin in TH2Poly"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fPoly", "Object holding the polygon definition"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObject*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fArea", "Bin area"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fContent", "Bin content"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmin", "X minimum value"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fYmin", "Y minimum value"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fXmax", "X maximum value"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fYmax", "Y maximum value"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TH2S", 4, 0x1256ca1c, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TH2", "2-Dim histogram base class"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 25310335, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TArrayS", "Array of shorts"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 56398612, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TDirectory", 5, 0x1e9b6f70, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMother", "pointer to mother of the directory"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObject*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fList", "List of objects in memory"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fUUID", "Unique identifier"),
			Type:   rmeta.Any,
			Size:   32,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TUUID",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TDirectoryFile", 5, 0xbf9f443e, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TDirectory", ""),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 513503088, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fModified", "True if directory has been modified"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fWritable", "True if directory is writable"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fDatimeC", "Date and time when directory is created"),
			Type:   rmeta.Any,
			Size:   16,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TDatime",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fDatimeM", "Date and time of last modification"),
			Type:   rmeta.Any,
			Size:   16,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TDatime",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbytesKeys", "Number of bytes for the keys"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbytesName", "Number of bytes in TNamed at creation time"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBufferSize", "Default buffer size to create new TKeys"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSeekDir", "Location of directory on file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSeekParent", "Location of parent directory on file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSeekKeys", "Location of Keys record on file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFile", "Pointer to current file in memory"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TFile*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fKeys", "Pointer to keys list in memory"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TFile", 8, 0x9468e382, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TDirectoryFile", ""),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1080081346, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSumBuffer", "Sum of buffer sizes of objects written so far"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSum2Buffer", "Sum of squares of buffer sizes of objects written so far"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBytesWrite", "Number of bytes written to this file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBytesRead", "Number of bytes read from this file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBytesReadExtra", "Number of extra bytes (overhead) read by the readahead buffer"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBEGIN", "First used byte in file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fEND", "Last used byte in file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSeekFree", "Location on disk of free segments structure"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSeekInfo", "Location on disk of StreamerInfo record"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fD", "File descriptor"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fVersion", "File format version"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCompress", "Compression level and algorithm"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbytesFree", "Number of bytes for free segments structure"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbytesInfo", "Number of bytes for StreamerInfo record"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fWritten", "Number of objects written so far"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNProcessIDs", "Number of TProcessID written to this file"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fReadCalls", "Number of read calls ( not counting the cache calls )"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fRealName", "Effective real file name (not original url)"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fOption", "File options"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fUnits", "Number of bytes for file pointers"),
			Type:   rmeta.Char,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "char",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFree", "Free segments linked list table"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TKey", 4, 0x2d353cd7, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fVersion", "Key version identifier"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbytes", "Number of bytes for the object on file"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fObjlen", "Length of uncompressed object in bytes"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fDatime", "Date/Time of insertion in file"),
			Type:   rmeta.Any,
			Size:   16,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TDatime",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fKeylen", "Number of bytes for the key itself"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCycle", "Cycle number"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSeekKey", "Location of object on file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSeekPdir", "Location of parent directory on file"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClassName", "Object Class name"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLeft", "Number of bytes left in current segment"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBuffer", "Object buffer"),
			Type:   rmeta.CharStar,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "char*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBufferRef", "Pointer to the TBuffer object"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TBuffer*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TFeldmanCousins", 1, 0xebbf41df, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCL", "confidence level as a fraction [e.g. 90% = 0.9]"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fUpperLimit", "the calculated upper limit"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLowerLimit", "the calculated lower limit"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNobserved", "input number of observed events"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNbackground", "input number of background events"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMuMin", "minimum value of signal to use in calculating the tables"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMuMax", "maximum value of signal to use in calculating the tables"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMuStep", "the step in signal to use when generating tables"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNMuStep", "= (int)(fMuStep)"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNMax", "= (int)(fMuMax)"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fQUICK", "take a short cut to speed up the process of generating a"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLorentzVector", 4, 0xe3dec1a1, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fP", "3 vector component"),
			Type:   rmeta.Object,
			Size:   40,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TVector3",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fE", "time or energy of (x,y,z,t) or (px,py,pz,e)"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TVector2", 3, 0x89b7f4, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fX", "components of the vector"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fY", ""),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TVector3", 3, 0xabb6be1e, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TObject", "Basic ROOT object"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1877229523, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fX", ""),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fY", ""),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fZ", ""),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("ROOT::TIOFeatures", 1, 0x1aa12f10, []rbytes.StreamerElement{
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fIOBits", ""),
			Type:   rmeta.UChar,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned char",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TBasket", 3, 0xbbf717e7, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TKey", "Header description of a logical record on file."),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 758463703, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 4),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBufferSize", "fBuffer length in bytes"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNevBufSize", "Length in Int_t of fEntryOffset OR fixed length of each entry if fEntryOffset is null!"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNevBuf", "Number of entries in basket"),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLast", "Pointer to last used byte in basket"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fHeaderOnly", "True when only the basket header must be read/written"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fEntryOffset", "[fNevBuf] Offset of entries in fBuffer(TKey); generated at runtime.  Special value"),
			Type:   43,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 3, "fNevBuf", "TBasket"),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBranch", "Pointer to the basket support branch"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TBranch*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TBranch", 13, 0x10978aac, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttFill", "Fill area attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -2545006, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCompress", "Compression level and algorithm"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBasketSize", "Initial Size of  Basket Buffer"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fEntryOffsetLen", "Initial Length of fEntryOffset table in the basket buffers"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fWriteBasket", "Last basket number written"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fEntryNumber", "Current entry number (last one filled in this branch)"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fIOFeatures", "IO features for newly-created baskets."),
			Type:   rmeta.Any,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "ROOT::TIOFeatures",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fOffset", "Offset of this branch"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaxBaskets", "Maximum number of Baskets so far"),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSplitLevel", "Branch split level"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fEntries", "Number of entries"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFirstEntry", "Number of the first entry in this branch"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTotBytes", "Total number of bytes in all leaves before compression"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fZipBytes", "Total number of bytes in all leaves after compression"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBranches", "-> List of Branches of this branch"),
			Type:   rmeta.Object,
			Size:   64,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLeaves", "-> List of leaves of this branch"),
			Type:   rmeta.Object,
			Size:   64,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBaskets", "-> List of baskets of this branch"),
			Type:   rmeta.Object,
			Size:   64,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fBasketBytes", "[fMaxBaskets] Length of baskets on file"),
			Type:   43,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 13, "fMaxBaskets", "TBranch"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fBasketEntry", "[fMaxBaskets] Table of first entry in each basket"),
			Type:   56,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 13, "fMaxBaskets", "TBranch"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fBasketSeek", "[fMaxBaskets] Addresses of baskets on file"),
			Type:   56,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 13, "fMaxBaskets", "TBranch"),
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFileName", "Name of file where buffers are stored (\"\" if in same file as Tree header)"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TBranchElement", 10, 0xe74f5e63, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TBranch", "Branch descriptor"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 278366892, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 13),
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClassName", "Class name of referenced object"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fParentName", "Name of parent class"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClonesName", "Name of class in TClonesArray (if any)"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fCheckSum", "CheckSum of class"),
			Type:   rmeta.UInt,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "unsigned int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClassVersion", "Version number of class"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fID", "element serial number in fInfo"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fType", "branch type"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fStreamerType", "branch streamer type"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum entries for a TClonesArray or variable array"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBranchCount", "pointer to primary branchcount branch"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TBranchElement*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBranchCount2", "pointer to secondary branchcount branch"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TBranchElement*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TBranchObject", 1, 0xa4720f49, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TBranch", "Branch descriptor"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 278366892, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 13),
		&StreamerString{StreamerElement: Element{
			Name:   *rbase.NewNamed("fClassName", "Class name of referenced object"),
			Type:   rmeta.TString,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TString",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TBranchRef", 1, 0x2360b3fd, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TBranch", "Branch descriptor"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 278366892, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 13),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fRefTable", "pointer to the TRefTable"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TRefTable*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TChain", 5, 0x3a9ec568, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TTree", "Tree descriptor (the main ROOT I/O class)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1919213695, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 20),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTreeOffsetLen", "Current size of fTreeOffset array"),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNtrees", "Number of trees"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fTreeOffset", "[fTreeOffsetLen] Array of variables"),
			Type:   56,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 5, "fTreeOffsetLen", "TChain"),
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFiles", "-> List of file names containing the trees (TChainElement, owned)"),
			Type:   rmeta.Objectp,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fStatus", "-> List of active/inactive branches (TChainElement, owned)"),
			Type:   rmeta.Objectp,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeaf", 2, 0x6d1e8152, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLen", "Number of fixed length elements in the leaf's data."),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLenType", "Number of bytes for this data type"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fOffset", "Offset in ClonesArray object (if one)"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fIsRange", "(=kTRUE if leaf has a range, kFALSE otherwise).  This is equivalent to being a 'leafcount'.  For a TLeafElement the range information is actually store in the TBranchElement."),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fIsUnsigned", "(=kTRUE if unsigned, kFALSE otherwise)"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLeafCount", "Pointer to Leaf count if variable length (we do not own the counter)"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TLeaf*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafElement", 1, 0xa04f8893, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fID", "element serial number in fInfo"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fType", "leaf type"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafObject", 4, 0x26ba7c4c, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fVirtual", "Support for polymorphism, when set classname is written with object."),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafO", 1, 0x2ae48d3, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Bool,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "bool",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafB", 1, 0xf1e4b5e, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Char,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "char",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Char,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "char",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafS", 1, 0x150ceecf, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Short,
			Size:   2,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "short",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafI", 1, 0x7e6aae19, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafL", 1, 0xde320862, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafF", 1, 0x3add9d72, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Float,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "float",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafD", 1, 0x118e8776, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafF16", 1, 0xeb35f883, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Float16,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Float16_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Float16,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Float16_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafD32", 1, 0xe1dc6401, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Double32,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Double32_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Double32,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Double32_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TLeafC", 1, 0xfbe3b2f3, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TLeaf", "Leaf: description of a Branch data type"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1830715730, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMinimum", "Minimum value if leaf range is specified"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaximum", "Maximum value if leaf range is specified"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TNtuple", 2, 0xb8a51cab, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TTree", "Tree descriptor (the main ROOT I/O class)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1919213695, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 20),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNvar", "Number of columns"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TNtupleD", 1, 0x8de8d873, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TTree", "Tree descriptor (the main ROOT I/O class)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 1919213695, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 20),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNvar", "Number of columns"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))
	StreamerInfos.Add(NewCxxStreamerInfo("TTree", 20, 0x7264e07f, []rbytes.StreamerElement{
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TNamed", "The basis for a named object (name, title)"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -541636036, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 1),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttLine", "Line attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -1811462839, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttFill", "Fill area attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, -2545006, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		NewStreamerBase(Element{
			Name:   *rbase.NewNamed("TAttMarker", "Marker attributes"),
			Type:   rmeta.Base,
			Size:   0,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 689802220, 0, 0, 0},
			Offset: 0,
			EName:  "BASE",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 2),
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fEntries", "Number of entries"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTotBytes", "Total number of bytes in all branches before compression"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fZipBytes", "Total number of bytes in all branches after compression"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fSavedBytes", "Number of autosaved bytes"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFlushedBytes", "Number of auto-flushed bytes"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fWeight", "Tree weight (see TTree::SetWeight)"),
			Type:   rmeta.Double,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "double",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTimerInterval", "Timer interval in milliseconds"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fScanField", "Number of runs before prompting in Scan"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fUpdate", "Update frequency for EntryLoop"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fDefaultEntryOffsetLen", "Initial Length of fEntryOffset table in the basket buffers"),
			Type:   rmeta.Int,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fNClusterRange", "Number of Cluster range in addition to the one defined by 'AutoFlush'"),
			Type:   rmeta.Counter,
			Size:   4,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "int",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaxEntries", "Maximum number of entries in case of circular buffers"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaxEntryLoop", "Maximum number of entries to process"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fMaxVirtualSize", "Maximum total size of buffers kept in memory"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fAutoSave", "Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fAutoFlush", "Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerBasicType{StreamerElement: Element{
			Name:   *rbase.NewNamed("fEstimate", "Number of entries to estimate histogram limits"),
			Type:   rmeta.Long64,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fClusterRangeEnd", "[fNClusterRange] Last entry of a cluster range."),
			Type:   56,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 20, "fNClusterRange", "TTree"),
		NewStreamerBasicPointer(Element{
			Name:   *rbase.NewNamed("fClusterSize", "[fNClusterRange] Number of entries in each cluster for a given range."),
			Type:   56,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "Long64_t*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New(), 20, "fNClusterRange", "TTree"),
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fIOFeatures", "IO features to define for newly-written baskets and branches."),
			Type:   rmeta.Any,
			Size:   1,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "ROOT::TIOFeatures",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBranches", "List of Branches"),
			Type:   rmeta.Object,
			Size:   64,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObject{StreamerElement: Element{
			Name:   *rbase.NewNamed("fLeaves", "Direct pointers to individual branch leaves"),
			Type:   rmeta.Object,
			Size:   64,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TObjArray",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fAliases", "List of aliases for expressions based on the tree branches."),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fIndexValues", "Sorted index values"),
			Type:   rmeta.Any,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TArrayD",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectAny{StreamerElement: Element{
			Name:   *rbase.NewNamed("fIndex", "Index of sorted values"),
			Type:   rmeta.Any,
			Size:   24,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TArrayI",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fTreeIndex", "Pointer to the tree Index (if any)"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TVirtualIndex*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fFriends", "pointer to list of friend elements"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fUserInfo", "pointer to a list of user objects associated to this Tree"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TList*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
		&StreamerObjectPointer{StreamerElement: Element{
			Name:   *rbase.NewNamed("fBranchRef", "Branch supporting the TRefTable (if any)"),
			Type:   rmeta.ObjectP,
			Size:   8,
			ArrLen: 0,
			ArrDim: 0,
			MaxIdx: [5]int32{0, 0, 0, 0, 0},
			Offset: 0,
			EName:  "TBranchRef*",
			XMin:   0.000000,
			XMax:   0.000000,
			Factor: 0.000000,
		}.New()},
	}))

}
